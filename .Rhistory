repeat {
break
}
i <- 0; i++
i
i++
i <- 0
i +<- 1
i <- i + 1
i
i <- 1
repeat {
i <- i + 1;
print(i);
if ( i == 10) break;
}
// un comentario
# un comentario
3
3 # un comentario
?dnorm
quit()
a <- 1:4
a
b <- 2:4
a %o% b
outer(month.abb, 1999:2003, FUN = "paste")
f <- function(x,y) x^2 + y
g <- outer(a, b, "f")
g
g <- outer(a, b, f)
g
g <- outer(a, b, *)
state <- c("tas", "sa",  "qld", "nsw", "nsw", "nt",  "wa",  "wa",
                 "qld", "vic", "nsw", "vic", "qld", "qld", "sa",  "tas",
                 "sa",  "nt",  "wa",  "vic", "qld", "nsw", "nsw", "wa",
state <- c("tas", "sa",  "qld", "nsw", "nsw", "nt",  "wa",  "wa",
"qld", "vic", "nsw", "vic", "qld", "qld", "sa",  "tas",
"sa",  "nt",  "wa",  "vic", "qld", "nsw", "nsw", "wa",
"sa",  "act", "nsw", "vic", "vic", "act")
state
statef <- factor(state)
statef
statef[act]
statef["act"]
statef[2]
statef
statef[[act]]
statef[["act"]]
Lst <- list(name="Fred", wife="Mary", no.children=3,
child.ages=c(4,7,9))
Lst[4]
Lst[4][2]
Lst$ch
Lst$ch[2]
Lst[[4]]
Lst[[4]][2]
Lst[2:3]
Lst
Lst
lst[3] <- NULL
Lst[3] <- NULL
Lst
Lst[3]
search()
Price <- c(52.00, 54.75, 57.50, 57.50, 59.75)
plot(Price)
Price1 <- c(52.00, 54.75, 55, 57.50, 59.75)
plot(Price1)
quit
exit
quit
quit()
install.packages("knitr")
options()
library("knitr", lib.loc="/home/checo/R/i486-pc-linux-gnu-library/2.15")
options()
options()
getwd()
install.packages(c("akima", "aplpack", "DBI", "digest", "e1071", "geometry", "magic", "matrixcalc", "R.matlab", "R.methodsS3", "R.oo", "tcltk2", "tripack", "xlsx"))
sqrt(-1)
sqrt(-1+0i)
getwd()
tt <- read.table("09012.dat")
tt
head(tt)
head(tt[1])
class(tt[1])
class(tt[[1]])
class(tt[[2]])
tt[1:3]
1968 %% 4
1969 %% 4
1972 %% 4
quit
q()
class(Inf)
?plot
source('~/Dropbox/Trabajando/Libro/TrianguloRotado.R', echo=TRUE)
na
NA
polygon(c(m[1,],NA,mt[1,]),c(m[2,],NA,mt[2,]),col=c("blak","red"))
polygon(c(m[1,],NA,mt[1,]),c(m[2,],NA,mt[2,]),col=c("black","red"))
plot( # c(m[1,],m[1,1]), c(m[2,],m[2,1]),
type="n", xlim=c(0,2.5),ylim=c(0,2.5),
main="Triangulo rotado",
xlab="X", ylab="Y")
plot(c(m[1,],m[1,1]), c(m[2,],m[2,1]),
type="n", xlim=c(0,2.5),ylim=c(0,2.5),
main="Triangulo rotado",
xlab="X", ylab="Y")
polygon(c(m[1,],NA,mt[1,]),c(m[2,],NA,mt[2,]),col=c("black","red"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# Triangulo rotado
m <- cbind(c(1,0), c(2,1), c(1,1))
# Triangulo
plot(c(m[1,],m[1,1]), c(m[2,],m[2,1]),
type="n", xlim=c(0,2.5),ylim=c(0,2.5),
main="Triangulo rotado",
xlab="X", ylab="Y")
# matriz de rotacion
alpha <- 32*pi/180
tr <- cbind(c(cos(alpha),sin(alpha)), c(-sin(alpha),cos(alpha)))
mt <- tr %*% m
# lines(c(mt[1,],mt[1,1]), c(mt[2,],mt[2,1]),col="red")
polygon(x=c(m[1,],NA,mt[1,]), y=c(m[2,],NA,mt[2,]),
density = 25,
col=c("black","red"))
lines(c(0,m[1,3]), c(0,m[2,3]), col="blue",lty="dashed")
lines(c(0,mt[1,3]), c(0,mt[2,3]), col="blue",lty="dashed")
lines(c(0,mt[1,3]), c(0,mt[2,3]), col="blue",lty="dashed")
# Triangulo rotado
m <- cbind(c(1,0), c(2,1), c(1,1))
# Triangulo
plot(c(0,0), # Esto no se pinta
type="n", xlim=c(0,2.5),ylim=c(0,2.5),
main="Triangulo rotado",
xlab="X", ylab="Y")
# matriz de rotacion
alpha <- 32*pi/180
tr <- cbind(c(cos(alpha),sin(alpha)), c(-sin(alpha),cos(alpha)))
mt <- tr %*% m
# lines(c(mt[1,],mt[1,1]), c(mt[2,],mt[2,1]),col="red")
polygon(x=c(m[1,],NA,mt[1,]), y=c(m[2,],NA,mt[2,]),
density = 25,
col=c("black","red"))
lines(c(0,m[1,3]), c(0,m[2,3]), col="blue",lty="dashed")
lines(c(0,mt[1,3]), c(0,mt[2,3]), col="blue",lty="dashed")
source('~/Dropbox/Trabajando/Libro/TrianguloRotado.R', echo=TRUE)
??installed
installed.packages()
installed.packages()
installed.packages()
library(splancs)
ss
a = c(1,2,3)
b = c(18,20,22)
?sd
?max
sd(a)
sd(b)
max(sd(a),sd(b))
?matrix
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 1))
var1
function example() {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 1))
print (var2)
print (var1)
}
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 1))
print (var2)
print (var1)
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 0))
print (var2)
print (var1)
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = -2))
print (var2)
print (var1)
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 2))
print (var2)
print (var1)
}
example()
search()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = 2))
print (var2)
print (var1)
search()
}
example()
ll <- search()
ll
ll[-1]
ll[1]
ll[0]
ll[+1]
ll[+2]
?search
loadedNamespaces()
?assign
sys.frame()
class(sys.frame())
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.frame(-1)))
print (var2)
print (var1)
search()
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.frame(-2)))
print (var2)
print (var1)
search()
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.call(-1)))
print (var2)
print (var1)
search()
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.function(-1)))
print (var2)
print (var1)
search()
}
example()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.parent(1)))
print (var2)
print (var1)
search()
}
example()
sys.call()
sys.function()
sys.nframe()
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.frame(-1)))
print(sys.nframe())
print (var2)
print (var1)
search()
}
example()
1,2
1;2
sys.frame(1)
sys.frame(0)
myprint
myprint <- function (i) {}
myprint <- function (i) {
print(i);
sys.nframe()
}
myprint(sys.nframe())
example <- function () {
var1 <- 250
kkk <- data.frame(vars=c("var1", "var2", "var3"),
vals=c(10, 20, 30), stringsAsFactors=F)
mapply(assign,  kkk$vars, kkk$vals, MoreArgs = list(pos = sys.frame(sys.nframe())))
# print(sys.nframe())
print (var2)
print (var1)
# search()
}
example()
install.packages(c("fields", "formatR", "highr", "plotrix", "tuneR"))
install.packages(c("formatR", "highr", "tuneR"))
install.packages(c("bitops", "digest"), lib="/usr/local/lib/R/site-library")
install.packages(c("car", "chron", "colorspace", "DBI", "effects", "Hmisc", "latticeExtra", "lmtest", "multcomp", "mvtnorm", "Rcmdr", "rgl", "rJava", "RMySQL", "sandwich", "sm", "strucchange", "zoo"), lib="/usr/lib/R/site-library")
install.packages(c("foreign", "spatial"), lib="/usr/lib/R/library")
install.packages("RColorBrewer")
install.packages(c("latticeExtra", "rJava", "RMySQL"), lib="/usr/lib/R/site-library")
w
rm(w)
aa <- 5+6
aa
aa <- 5+6
1792*1.5
install.packages("knitr")
?sys.frame
str_split
?str_split
?str.split
?StrSplit
??"string split"
??"split"
strsplit(c("uno,dos","tres,cuatro"),",")
install.packages("stringr")
library(stringr)
str_split(c("uno,dos","tres,cuatro"),",")
strsplit(c("uno,dos","tres,cuatro"),",")
x <- as.Date("2014-02-25")
x
class(x)
x+5
x-30
install.packages("DBI")
install.packages("RMySQL")
cube
cube <- function(x) {}
cube <- function(x) {
n <- 3
x^3
}
cube(2)
ls(environment(cube))
cube
environment(cube)
ls()
install.packages("knitr")
ls()
myprint
search()
ls("package:base")
t
?t
class(search())
ls("package:stats")
?rm
ls()
ls(".GlobalEnv")
2014-1982
source('~/Ubuntu One/PROY1/ProducePlotsF.R')
Args
Args <- vector()
length(Args)
rm(Args)
length(Args)
Args <- vector()
if (length(Args)) {}
if (length(Args)) {"si"}
exists(Args)
??exist
?sys.frame
?optim
?optimize
?optim
library(knitr)
?read_chunk
?run_chunk
library(knitr)
?read_chunk
?solve
dif
difx
source('~/Mega/Libro/NwRphSimult.R')
if (T) 1 else 2
if (F) 1 else 2
source('~/Mega/Libro/NwRphSimult.R')
source('~/Mega/Libro/NwRphSimult.R')
test()
test(1)
?"switch"
switch(1, "a", "b", "c")
switch(2, "a", "b", "c")
switch(3, "a", "b", "c")
source('~/Mega/Libro/NwRphSimult.R')
test(1)
test(2)
?install.packages
?solve
?jacobian
title: "Untitled"
?var
?format
pi
format(pi, digits=2)
format(pi, digits=3)
format(10*pi, digits=3)
format(pi, nsmall=3)
format(13.7)
format(13.7, nsmall = 3)
format(c(6.0, 13.1), digits = 2)
format(c(6.0, 13.1), digits = 2, nsmall = 1)
format(pi, digits=4, nsmall=2)
format(10*pi, digits=4, nsmall=2)
?plot
pp <- read.table("PrecipOctGro.txt")
setwd("~/Mega/Libro")
pp <- read.table("PrecipOctGro.txt")
rownames(pp)
as.numeric(rownames(pp))
plot(as.numeric(rownames(pp)), pp$Precip, type="b")
plot(as.numeric(rownames(pp)), pp$Precip, type="b", col=c("blue","red"))
plot(as.numeric(rownames(pp)), pp$Precip, type="b")
colors()
?plot
example(points)
rm(example)
example(points)
example(points)
??fonts
?Encoding
Encoding("año") <- "UTF-8"
x <- "fa\xE7ile"
x
Encoding(x)
Encoding(x) <- "latin1"
x
x <- "A\xF1o"
x
Encoding(x) <- "latin1"
x
lab
Encoding(x)
attributes(x)
x <- "año"
Encoding(x)
