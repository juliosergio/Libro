install.packages("knitr")
install.packages("numDeriv")
source('~/Copy/Libro/NwRphSimult.R')
test()
install.packages("swirl")
library(swirl)
rm(list=ls())
source('~/Mega/Libro/DesemplEducSup.R')
?plot
plot(rnorm(5))
plot(rnorm(5),1)
plot(rnorm(5),rep(1,5)
)
?plot
desempl.educ.sup$prcnt[1]
trunc(desempl.educ.sup$prcnt[1])
source('~/Mega/Libro/DesemplEducSup.R')
tinf:tinf+5
tinf:(tinf+5)
source('~/Mega/Libro/DesemplEducSup.R')
source('~/Mega/Libro/DesemplEducSup.R')
?heat.colors
source('~/Mega/Libro/DesemplEducSup.R')
source('~/Mega/Libro/DesemplEducSup.R')
source('~/Mega/Libro/EjemploPoissons.R')
??factorial
factorial(3)
dpois(12,10)
(10^12/factorial(12))*exp(-10)
?dpois
source('~/Mega/Libro/EjemploPoissons.R')
arr <- array(1:20, c(4,5))
arr
arr%%10==0
arr[arr%%10==0,1]
arr[,1]%%10==0
arr[,2]%%10==0
arr[,3]%%10==0
arr[,4]%%10==0
arr[,5]%%10==0
Reduce("|", arr[,1]%%10==0)
Reduce("|", arr[,3]%%10==0)
Reduce("|", arr[,5]%%10==0)
T %in% arr[,5]%%10==0
T %in% arr[,2]%%10==0
arr[,2]%%10==0
T %in% (arr[,2]%%10==0)
T %in% (arr[,3]%%10==0)
a <- 1:3
b <- 4:6
sum(a*b)
a %*% b
c <- 8:10
sum(b*c)
m <- rbind(a,c)
m
m %*% b
install.packages("RColorBrewer")
library(RColorBrewer)
plot(1:8, pch=15, col=1:8)
plot(1:9, pch=15, col=1:9)
?par
plot(1:9, pch=15, cex=3 col=1:9)
plot(1:9, pch=15, cex=3, col=1:9)
palette(brewer.pal(15, "Set3"))
palette(brewer.pal(12, "Set3"))
plot(1:9, pch=15, cex=3 col=1:9)
plot(1:9, pch=15, cex=3, col=1:9)
setwd("~/Mega/Libro")
source('~/Mega/Libro/Grafica3D.R')
dev.off()
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
?persp
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
# (2) Add to existing persp plot - using trans3d() :
xE <- c(-10,10); xy <- expand.grid(xE, xE)
points(trans3d(xy[,1], xy[,2], 6, pmat = res), col = 2, pch = 16)
lines (trans3d(x, y = 10, z = 6 + sin(x), pmat = res), col = 3)
phi <- seq(0, 2*pi, len = 201)
r1 <- 7.725 # radius of 2nd maximum
xr <- r1 * cos(phi)
yr <- r1 * sin(phi)
lines(trans3d(xr,yr, f(xr,yr), res), col = "pink", lwd = 2)
## (no hidden lines)
# (3) Visualizing a simple DEM model
z <- 2 * volcano        # Exaggerate the relief
x <- 10 * (1:nrow(z))   # 10 meter spacing (S to N)
y <- 10 * (1:ncol(z))   # 10 meter spacing (E to W)
## Don't draw the grid lines :  border = NA
par(bg = "slategray")
persp(x, y, z, theta = 135, phi = 30, col = "green3", scale = FALSE,
ltheta = -120, shade = 0.75, border = NA, box = FALSE)
# (1) The Obligatory Mathematical surface.
#     Rotated sinc function.
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
round(res, 3)
# (2) Add to existing persp plot - using trans3d() :
xE <- c(-10,10); xy <- expand.grid(xE, xE)
points(trans3d(xy[,1], xy[,2], 6, pmat = res), col = 2, pch = 16)
lines (trans3d(x, y = 10, z = 6 + sin(x), pmat = res), col = 3)
phi <- seq(0, 2*pi, len = 201)
r1 <- 7.725 # radius of 2nd maximum
xr <- r1 * cos(phi)
yr <- r1 * sin(phi)
lines(trans3d(xr,yr, f(xr,yr), res), col = "pink", lwd = 2)
## (no hidden lines)
source('~/Mega/Libro/Ejemplos3D.R')
res
xE
xy
xy[,1]
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z
z[is.na(z)]
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
xE <- c(-10,10); xy <- expand.grid(xE, xE)
points(trans3d(xy[,1], xy[,2], 6, pmat = res), col = 2, pch = 16)
lines (trans3d(x, y = 10, z = 6 + sin(x), pmat = res), col = 3)
phi <- seq(0, 2*pi, len = 201)
phi
r1 <- 7.725 # radius of 2nd maximum
xr <- r1 * cos(phi)
yr <- r1 * sin(phi)
lines(trans3d(xr,yr, f(xr,yr), res), col = "pink", lwd = 2)
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
source('~/Mega/Libro/Grafica3D.R')
