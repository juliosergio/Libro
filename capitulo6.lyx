#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Graficación con R
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<widthcap6, include=F>>=
\end_layout

\begin_layout Plain Layout

options('width')
\end_layout

\begin_layout Plain Layout

options(width=60)
\end_layout

\begin_layout Plain Layout

options('width')
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<set-optionsCap6, echo=FALSE, cache=FALSE>>=
\end_layout

\begin_layout Plain Layout

read_chunk('EjCap5.R')
\end_layout

\begin_layout Plain Layout

read_chunk('produceSym.R')
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una de las grandes virtudes del lenguaje R, es la facilidad que ofrece para
 presentar la información correspondiente a los datos que maneja o a los
 cálculos que desarrolla, de una manera gráfica.
 El lenguaje cuenta, no con uno, sino con varios sistemas, en general separados,
 para organizar o especificar visualizaciones gráficas.
 En este capítulo se revisará uno de ellos, el sistema gráfico básico, que
 es el que está inmediatamente disponible en la instalación inicial del
 lenguaje.
 Éste, y otros sistemas gráficos disponibles en el lenguaje, se pueden consultar
 a más detalle en 
\begin_inset CommandInset citation
LatexCommand cite
key "Murrell2006,Chang2012"

\end_inset

.
\end_layout

\begin_layout Section
Motivación
\end_layout

\begin_layout Standard
Anteriormente, en el capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Escritura-de-Funciones"

\end_inset

, se vio colateralmente la manera para producir histogramas sencillos, a
 partir de un conjunto de datos.
 Sin embargo, en ese capítulo, la producción de estos histogramas, se hizo
 sin alterar o controlar la apariencia final del gráfico resultante; esto
 es, se dispuso de las opciones que el sistema otorga por ausencia, o por
 
\emph on
default
\emph default
.
 No obstante, la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ajuste-de-datos"

\end_inset

 de ese capítulo, exhibe una apariencia que no es generada por el código
 de ejemplo que se muestra allí mismo, en la sección 
\begin_inset CommandInset ref
LatexCommand vref
reference "El-resultado-del-código"

\end_inset

.
 La producción de la gráfica en cuestión, requiere de la alteración de las
 opciones que el sistema ofrece por ausencia.
 
\end_layout

\begin_layout Standard
En el código que se muestra a continuación se puede observar cómo se modifican
 algunas de las opciones de apariencia, para generar el gráfico deseado,
 que se presenta nuevamente en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-con-atributos"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<EjCap5, include=F, echo=F>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<Grafico0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

hist(pp$Precip, freq=F, breaks=15,
\end_layout

\begin_layout Plain Layout

     col="blueviolet", # Color de las barras
\end_layout

\begin_layout Plain Layout

     density=30, # Densidad de sombreado de las barras
\end_layout

\begin_layout Plain Layout

     main="Histograma y densidad Gamma", # Título
\end_layout

\begin_layout Plain Layout

     xlab="precipitacion (mm)", # Etiqueta del eje X
\end_layout

\begin_layout Plain Layout

     ylab="Densidad") # Etiqueta del eje Y
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

curve(dgammaX, add=T,
\end_layout

\begin_layout Plain Layout

     col="green", # Color de la curva
\end_layout

\begin_layout Plain Layout

     lwd=3) # Ancho de línea de la curva
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Grafico1, ref.label='Grafico0', echo=FALSE, fig.width=4, fig.height=4, fig.show='h
old', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfico-con-atributos"

\end_inset

Gráfico con atributos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hasta aquí, se ha visto como producir histogramas y curvas.
 Existen varios otros tipos de gráficos, además de que hay muchas otras
 opciones para manipular su apariencia; algunos de estos tipos, así como
 algunas de sus opciones, se revisarán en las siguientes secciones del presente
 capítulo.
\end_layout

\begin_layout Section
La función más básica de graficación: 
\family typewriter
plot()
\end_layout

\begin_layout Standard
La función más simple para graficar es 
\family typewriter
plot()
\family default
.
 Antes de explicar sus posibilidades, veremos qué es lo que hace en el caso
 más sencillo.
 Para ello se empleará el mismo conjunto de datos último ejemplo del capítulo
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Escritura-de-Funciones"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Scatter0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

plot(pp$Precip) # Produce un gráfico de "dispersión"
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado de la operación anterior se puede ver en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Un-sencillo-gráfico"

\end_inset

, con algunas anotaciones acerca de los valores que ha tomado el lenguaje
 por omisión.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Scatter1.jpg
	lyxscale 60
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Un-sencillo-gráfico"

\end_inset

Un sencillo gráfico de 
\emph on
dispersión
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En general, la función 
\family typewriter
plot()
\family default
 toma como argumentos dos vectores de la misma dimensión, uno para los valores
 de las abscisas, 
\family typewriter
x
\family default
, y otro para los valores de las ordenadas, 
\family typewriter
y
\family default
.
 Sin embargo, cuando se omite uno de ellos, el lenguaje 
\emph on
entiende
\emph default
 que las abscisas serían simplemente los índices de los elementos en el
 vector provisto, y que las ordenadas serán, por tanto, cada uno de los
 elementos del vector.
 De igual manera, el lenguaje 
\emph on
supone
\emph default
 que lo que se quiere graficar son los puntos como tal y con el color y
 tipo de símbolo seleccionados por omisión.
 La función 
\family typewriter
plot()
\family default
 tiene una gran variedad de argumentos que permiten cambiar ese comportamiento
 por omisión y que pueden ser consultados en línea mediante la instrucción
 
\family typewriter

\begin_inset Quotes eld
\end_inset

?plot
\begin_inset Quotes erd
\end_inset


\family default
.
 
\end_layout

\begin_layout Standard
En seguida, se grafica la misma información que en el gráfico anterior,
 pero ahora como líneas azules, y considerando como abscisas los años de
 los datos, que en este caso son los nombres de los renglones del 
\emph on
data frame
\emph default
 que contiene los datos, 
\family typewriter
pp
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<BlueLines0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Para el manejo de etiquetas especiales,
\end_layout

\begin_layout Plain Layout

# con caracteres "raros para el Inglés", 
\end_layout

\begin_layout Plain Layout

lab <- "Años" # Etiqueta para las abscisas
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

plot(as.numeric(rownames(pp)), # las abscisas
\end_layout

\begin_layout Plain Layout

     pp$Precip, # las ordenadas
\end_layout

\begin_layout Plain Layout

     type="l",  # tipo de grafico: líneas
\end_layout

\begin_layout Plain Layout

     col="blue",  # color: azul
\end_layout

\begin_layout Plain Layout

     main="Precipitaciones, Octubre", # Título
\end_layout

\begin_layout Plain Layout

     sub="Estado de Guerrero", # Subtítulo
\end_layout

\begin_layout Plain Layout

     xlab=lab, # etiqueta eje X
\end_layout

\begin_layout Plain Layout

     ylab="Precipitacion") # etiqueta eje Y
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado correspondiente al código anterior se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-de-líneas"

\end_inset

.
 Aquí, como ejemplo, se ha recurrido a proveer la etiqueta 
\begin_inset Quotes eld
\end_inset

Años
\begin_inset Quotes erd
\end_inset

, para el eje de las abscisas, por fuera del llamado a la función 
\family typewriter
plot()
\family default
, porque de otra manera el lenguaje no interpretaría correctamente que la
 tabla de codificación de caracteres es 
\begin_inset Quotes eld
\end_inset

UTF-8
\begin_inset Quotes erd
\end_inset

.
 También, cabe notar que los nombres de los renglones se han convertido
 a tipo numérico, ya que el vector 
\family typewriter
rownames(pp)
\family default
 es de cadenas de caracteres.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<BlueLines1, ref.label='BlueLines0', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfico-de-líneas"

\end_inset

Gráfico de líneas con la misma información que en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Un-sencillo-gráfico"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En general, el gráfico más simple que se pudiera ocurrir es probablemente
 un gráfico 
\emph on
x-y
\emph default
 resultante de la aplicación de una función; por ejemplo, el gráfico de
 las áreas de los círculos, en función de sus radios.
 A continuación se muestra el código para producir ese gráfico para once
 radios: del 0 al 10.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Areas0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

radio <- 0:10 # Vector de radios
\end_layout

\begin_layout Plain Layout

area <- pi*radio^2 # Vector de áreas
\end_layout

\begin_layout Plain Layout

tit <- "Áreas de círculos" # Título del gráfico
\end_layout

\begin_layout Plain Layout

plot(radio, area, # x=radio y=area
\end_layout

\begin_layout Plain Layout

     type="b", # "both", puntos y líneas
\end_layout

\begin_layout Plain Layout

     main=tit,
\end_layout

\begin_layout Plain Layout

     xlab="Radio (r)",
\end_layout

\begin_layout Plain Layout

     ylab=expression(Area == pi*r^2), # Una expresión
\end_layout

\begin_layout Plain Layout

     col="orange", # color (naranja)
\end_layout

\begin_layout Plain Layout

     pch=20) # tipo de símbolo para punto
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado del código anterior se puede observar en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-de-radios"

\end_inset

.
 En este gráfico se ha añadido como título del eje de las ordenadas una
 expresión matemática.
 Mediante el uso de la función 
\family typewriter
expression()
\family default
, el lenguaje se encarga de traducir la expresión a su representación matemática
 simbólica.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<Areas1, ref.label='Areas0', echo=FALSE, fig.width=4, fig.height=4, fig.show='hold'
, out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfico-de-radios"

\end_inset

Gráfico de radios contra áreas de círculos
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nótese que en el código anterior, se ha señalado el tipo de gráfico mediante
 el argumento 
\family typewriter
type=
\begin_inset Quotes erd
\end_inset

b
\begin_inset Quotes erd
\end_inset


\family default
; esto es, se graficarán tanto los puntos como las líneas que los unen.
 El argumento 
\family typewriter
type
\family default
 de la función 
\family typewriter
plot()
\family default
 permite modificar los tipos de gráficos que se pueden producir.
 En la tabla que se da a continuación, se describen dichos tipos de gráficos.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
type=
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tipo de gráfico
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
puntos (gráfico de dispersión)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

l
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
líneas
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

b
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ambos (puntos y líneas)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

c
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
sólo las líneas de 
\family typewriter
type=
\begin_inset Quotes erd
\end_inset

b
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

o
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
puntos y líneas, sobre-graficados
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

h
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
agujas (tipo histograma)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

s
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
función escalera (horizontal a vertical)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

S
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
función escalera (vertical a horizontal)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
no-grafica (sólo se grafican referencias)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
La Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Graficos-que-se"

\end_inset

 muestra la apariencia de cada uno de esos tipos, para los mismos datos
 de la figura anterior.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<GrTypes, echo=FALSE, fig.width=4, fig.height=7, fig.show='hold', out.width='1.0
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

ppar <- par(mfrow=c(5,2),
\end_layout

\begin_layout Plain Layout

            mar=c(2.1, 2.1, 2.1, 1.1))
\end_layout

\begin_layout Plain Layout

for (ii in c("p","l","b","c","o","h","s","S","n")) {
\end_layout

\begin_layout Plain Layout

  plot(radio, area, type=ii, pch=20, main=paste0('type="',ii,'"'))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

par(ppar)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Graficos-que-se"

\end_inset

Tipos de gráficos que se pueden producir con 
\family typewriter
plot()
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aparte del tipo de gráfico, hay otros parámetros para cambiar la apariencia
 del gráfico resultante.
 En la tabla siguiente se mencionan y describen algunos de los más importantes.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parámetro
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Uso/Descripción
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
main
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Título 
\emph on
principal
\emph default
 del gráfico
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
sub
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Subtítulo del gráfico
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
xlab
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Etiqueta del eje de las abscisas
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ylab
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Etiqueta del eje de las ordenadas
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
asp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relación de aspecto del área gráfica (y/x)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
xlim, ylim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vectores que indican el rango de valores en los ejes x,y
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
log
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Los ejes que serán logarítmicos, p.ej., 
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

y
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

yx
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
col
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Color
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
bg
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Color del 
\emph on
fondo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
pch
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Símbolos para puntos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
cex
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Para escalado de símbolos de puntos
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
lty
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tipos de línea
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
lwd
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grosor de líneas
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
De particular interés aquí, son los símbolos empleados para los puntos y
 los colores.
 En la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Los-tipos-de"

\end_inset

 se muestran los tipos de símbolos para los puntos, esto es, los valores
 que se pueden dar al parámetro 
\family typewriter
pch
\family default
, que pueden ser numéricos, del 0 al 25, o caracteres.
 En particular, los símbolos del 21 al 25 son figuras bicolores, que toman
 el valor del parámetro 
\family typewriter
col
\family default
 para su contorno y del parámetro 
\family typewriter
bg
\family default
, para el relleno.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<pchShow, include=F, echo=F>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<expchShow, echo=FALSE, fig.width=4, fig.height=4, fig.show='hold', out.width='0.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

pchShow(cex=1.5,cextext=1,main="",coltext="navyblue")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Los-tipos-de"

\end_inset

Los tipos de símbolos utilizables para puntos (
\family typewriter
pch
\family default
)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para observar la utilidad del manejo de la apariencia, se presenta a continuació
n un ejemplo en el que se hace una gráfica que contiene dos funciones: el
 área y el perímetro de un círculo contra su radio.
 Para poder 
\emph on
encimar
\emph default
 los dos gráficos se emplea la función 
\family typewriter
lines()
\family default
; ésta permite agregar al gráfico actual otro de líneas y sus argumentos
 son semejantes a los de 
\family typewriter
plot()
\family default
.
 Además, para distinguir una curva de la otra resulta muy conveniente añadir
 una leyenda con la simbología y textos adecuados; esto se hace por medio
 de la función 
\family typewriter
legend()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<AreasPerimetros0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

aa <- "área" # Texto para leyenda
\end_layout

\begin_layout Plain Layout

pp <- "perímetro" # Texto para leyenca
\end_layout

\begin_layout Plain Layout

xl <- "área, perímetro" # Etiqueta eje X
\end_layout

\begin_layout Plain Layout

radio <- seq(0,5,by=0.5) # Vector de radios 
\end_layout

\begin_layout Plain Layout

area <- pi*radio^2 # Vector de áreas 
\end_layout

\begin_layout Plain Layout

perimetro <- 2*pi*radio # Vector de perímetros 
\end_layout

\begin_layout Plain Layout

plot(area, radio, type="o", xlab=xl, pch=21, col="red3", 
\end_layout

\begin_layout Plain Layout

     bg="gold") 
\end_layout

\begin_layout Plain Layout

# En seguida "encimaremos" sobre el gráfico anterior (áreas),
\end_layout

\begin_layout Plain Layout

# el de perímetros
\end_layout

\begin_layout Plain Layout

lines(perimetro, radio, type="o", pch=23, col="navyblue", 
\end_layout

\begin_layout Plain Layout

      bg="violetred") 
\end_layout

\begin_layout Plain Layout

legend("bottomright",                  # ubicación leyenda
\end_layout

\begin_layout Plain Layout

       legend = c(aa,     pp         ),  # textos de leyenda
\end_layout

\begin_layout Plain Layout

       lty =    c(1,      1          ),  # tipo de línea
\end_layout

\begin_layout Plain Layout

       pch =    c(21,     23         ),  # símbolos
\end_layout

\begin_layout Plain Layout

       col =    c("red3", "navyblue" ),  # color líneas
\end_layout

\begin_layout Plain Layout

       pt.bg =  c("gold", "violetred") ) # relleno de símbolo
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado del código previo se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Áreas-y-perímetros"

\end_inset

.
 Como los elementos de la leyenda son dos, esto es, las curvas correspondientes
 a las áreas y a los perímetros, todos los parámetros de la función, salvo
 su ubicación, deberán ser dobles y por eso se proveen mediante vectores
 con la función 
\family typewriter
c()
\family default
.
 Nótese además que, en la leyenda, para indicar el color de relleno del
 símbolo no se ha usado el parámetro 
\family typewriter
bg
\family default
, sino 
\family typewriter
pt.bg
\family default
, ya que, para el caso de leyendas el parámetro 
\family typewriter
bg
\family default
 está reservado para indicar el color de fondo del recuadro de leyendas.
 Por otra parte, en la leyenda también, se ha tenido que indicar el tipo
 de línea, que por omisión en la función 
\family typewriter
plot()
\family default
 es 1; esto es así, porque, de no hacerlo, la función 
\family typewriter
legend()
\family default
 solamente mostraría el símbolo sin la línea.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<AreasPerimetros1, ref.label='AreasPerimetros0', echo=FALSE, fig.width=4,
 fig.height=4, fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Áreas-y-perímetros"

\end_inset

Áreas y perímetros de círculos contra su radio
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Colores
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:En-todos-los"

\end_inset

En todos los ejemplos anteriores, se han manejado los colores mediante nombres,
 tales como: 
\begin_inset Quotes eld
\end_inset


\emph on
red
\emph default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\emph on
blue
\emph default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\emph on
navyblue
\emph default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\emph on
violetred
\emph default

\begin_inset Quotes erd
\end_inset

, etc.
 El lenguaje, sin embargo, provee de diversos mecanismos para especificar
 los colores, el más simple de los cuales, es mediante un número entero.
 La Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Colores-por-número"

\end_inset

, muestra los colores numerados del 1 al 16.
 Puede notarse que esta forma sencilla de especificar los colores es bastante
 limitada, ya que en realidad sólo se dispone de ocho colores diferentes;
 esto es, del 1 al 8, en orden: negro, rojo, verde, azul, cian, magenta,
 amarillo y gris.
 A partir del color 9, la secuencia se repite.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<colShow, echo=FALSE, fig.width=4, fig.height=4, fig.show='hold', out.width='0.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

colShow(cex=3.5,cextext=1,main="")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Colores-por-número"

\end_inset

Colores por número entero
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El esquema más general para la especificación de un color es por medio de
 la especificación de sus 
\emph on
contenidos
\emph default
 de los colores primarios: rojo, verde y azul, RGB, por sus nombres en inglés.
 En este caso, hay por lo menos dos maneras de especificar el color, a saber:
 por medio de su código hexadecimal y por medio de la especificación de
 sus contenidos 
\emph on
porcentuales
\emph default
 de color usando la función 
\family typewriter
rgb()
\family default
.
 El código hexadecimal, asigna un byte para la especificación del contenido
 de cada color y, por consiguiente, el contenido es expresado como un entero
 entre 0 y 
\begin_inset Formula $(2^{8}-1)$
\end_inset

, o sea, entre 0 y 255, expresado como hexadecimal; con 0 indicando la ausencia
 completa del color y con 255 indicando la presencia completa o el 100%
 del color en cuestión.
 De este modo, supóngase que se quiere expresar un color con 176 de rojo,
 48 de verde y 96 de azul, los códigos hexadecimales correspondientes a
 esos números son: B0, 30 y 60, respectivamente.
 Así, el código hexadecimal del color que se quiere representar es 
\begin_inset Quotes eld
\end_inset

B03060
\begin_inset Quotes erd
\end_inset

.
 Ya que este código de color se le proporcionará al lenguaje como una cadena
 de caracteres y para que no haya confusión con la especificación de colores
 por nombre, se antepone el símbolo '#', a la cadena; esto es, para el caso
 del ejemplo el código de color sería la cadena: 
\family typewriter

\begin_inset Quotes eld
\end_inset

#B03060
\begin_inset Quotes erd
\end_inset


\family default
.
 La función rgb(), provee de una manera sencilla para obtener esa cadena
 de caracteres representativa del color, dando, como números, los valores
 individuales para cada color.
 Por ejemplo, para obtener el código del ejemplo, se puede hacer así:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<rgb1, tidy=F>>=
\end_layout

\begin_layout Plain Layout

rgb(176, 48, 96, maxColorValue=255)
\end_layout

\begin_layout Plain Layout

# O como números entre 0 y 1 (porcentajes):
\end_layout

\begin_layout Plain Layout

rgb(176/255, 48/255, 96/255)
\end_layout

\begin_layout Plain Layout

# La función rgb() puede producir los códigos
\end_layout

\begin_layout Plain Layout

# de color de varios colores simultáneamente:
\end_layout

\begin_layout Plain Layout

colores <- rgb(red=  c(176,255,238,205), 
\end_layout

\begin_layout Plain Layout

               green=c( 48, 52, 48, 41),
\end_layout

\begin_layout Plain Layout

               blue= c( 96,179,167,144),
\end_layout

\begin_layout Plain Layout

               max=255) # se puede abreviar "maxColorValue"
\end_layout

\begin_layout Plain Layout

colores
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En seguida se utilizará ese arreglo de colores para la producción de una
 gráfica muy sencilla en la que se pueda visualizar el efecto visual de
 cada color.
 El resultado del código se puede observar en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-de-colores"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<rgb2, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

plot(1:4, pch=22, cex=10, bg=colores, 
\end_layout

\begin_layout Plain Layout

     xlim=c(-0.5,4.5), ylim=c(-0.5,4.5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<rgb3, ref.label='rgb2', echo=FALSE, fig.width=4, fig.height=4, fig.show='hold',
 out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfico-de-colores"

\end_inset

Gráfico de colores especificados por código hexadecimal
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los colores también se pueden especificar por sus nombres en inglés.
 El lenguaje tiene registrados 657 nombres alfanuméricos de colores que
 se pueden revisar mediante la función 
\family typewriter
colors()
\family default
 del lenguaje.
 Como un ejemplo se muestran en seguida los primeros veinte nombres contenidos
 en vector que regresa dicha función, y el segmento de colores entre los
 índices 455 al 458.
 Además el lenguaje cuenta con funciones que permiten obtener los contenidos
 de color RGB de cada uno de los colores nombrados.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<colores0, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Los primeros veinte nombres de colores:
\end_layout

\begin_layout Plain Layout

head(colors(),20)
\end_layout

\begin_layout Plain Layout

# Los elementos 455 al 458
\end_layout

\begin_layout Plain Layout

coloresPorNombre <- colors()[455:458]
\end_layout

\begin_layout Plain Layout

coloresPorNombre
\end_layout

\begin_layout Plain Layout

# Para encontrar los contenidos de RGB:
\end_layout

\begin_layout Plain Layout

(dd <- col2rgb(coloresPorNombre))
\end_layout

\begin_layout Plain Layout

# Y para encontrar los hexadecimales correspondientes:
\end_layout

\begin_layout Plain Layout

codigos <- rgb(red=  dd["red",], 
\end_layout

\begin_layout Plain Layout

               green=dd["green",],
\end_layout

\begin_layout Plain Layout

               blue= dd["blue",],
\end_layout

\begin_layout Plain Layout

               max=255) # se puede abreviar "maxColorValue"
\end_layout

\begin_layout Plain Layout

codigos
\end_layout

\begin_layout Plain Layout

# Pero, dado que 'dd' es una matriz, 
\end_layout

\begin_layout Plain Layout

# podemos obtener el mismo resultado con su
\end_layout

\begin_layout Plain Layout

# traspuesta así:
\end_layout

\begin_layout Plain Layout

(codigos <- rgb(t(dd), max=255))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nótese que, intencionalmente, los códigos de color obtenidos son exactamente
 los mismos que en el ejemplo anterior.
 Así, para obtener la misma gráfica que se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-de-colores"

\end_inset

, por medio de los nombres de colores bastará con ejecutar el siguiente
 código:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<colores1, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Se proporciona el vector de nombres de
\end_layout

\begin_layout Plain Layout

# colores en vez del vector de códigos
\end_layout

\begin_layout Plain Layout

plot(1:4, pch=22, cex=10, bg=coloresPorNombre, 
\end_layout

\begin_layout Plain Layout

     xlim=c(-0.5,4.5), ylim=c(-0.5,4.5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como posiblemente los nombres de los colores no dan una idea exacta de la
 apariencia del color, en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Apariencia-de-los"

\end_inset

, se muestra una tabla con los colores nombrados por la función 
\family typewriter
colors()
\family default
 y su respectivo índice
\begin_inset Foot
status open

\begin_layout Plain Layout
Esta tabla ha sido tomada de http://research.stowers-institute.org/efg/R/Color/Cha
rt/, que contiene además otras ayudas para la especificación de colores
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ColorsChart1.jpg
	lyxscale 80
	width 87text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Apariencia-de-los"

\end_inset

Apariencia de los colores regresados por la función 
\family typewriter
colors()
\family default
 y su índice
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al principio de esta sección, 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sec:En-todos-los"

\end_inset

, se dijo que la especificación de colores por número era limitada.
 Esto se debe a que, por omisión, el lenguaje cuenta con una paleta de sólo
 ocho colores.
 La función 
\family typewriter
palette()
\family default
, permite consultar la paleta actual o establecer una nueva.
 La especificación de los colores en una paleta se hace por medio de los
 códigos hexadecimales o de los nombre de los colores que se pretende usar.
 En seguida se hace la consulta de la paleta actual y se cambia por una
 diferente.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<paletas, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# la paleta actual
\end_layout

\begin_layout Plain Layout

palette()
\end_layout

\begin_layout Plain Layout

# para cambiarla, por ejemplo, con los primeros
\end_layout

\begin_layout Plain Layout

# veinticinco colores de colors()
\end_layout

\begin_layout Plain Layout

palette(colors()[1:25])
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nueva-paleta-para"

\end_inset

 se muestran los colores resultantes con la nueva paleta de colores.
 A partir de aquí, los números del 1 al 25 se podrían utilizar para especificar
 los colores que se muestran en la figura.
 El tamaño máximo de una paleta definida con esta función es de 1024 colores.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<paletas1, echo=FALSE, fig.width=4, fig.height=4, fig.show='hold', out.width='0.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

colShow(np=25, cex=3.5,cextext=1,main="")
\end_layout

\begin_layout Plain Layout

palette("default")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Nueva-paleta-para"

\end_inset

Nueva paleta para especificar colores por números enteros
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además de lo antedicho, en el lenguaje se han desarrollado diversas paletas
 de colores con fines específicos, y que son provistas o construidas por
 funciones tales como: 
\family typewriter
heat.colors()
\family default
, 
\family typewriter
terrain.colors()
\family default
, 
\family typewriter
topo.colors()
\family default
, 
\family typewriter

\begin_inset Newline linebreak
\end_inset

cm.colors()
\family default
, 
\family typewriter
rainbow()
\family default
.
 Salvo la función 
\family typewriter
rainbow()
\family default
, todas las otras funciones tienen sólo dos argumentos, 
\family typewriter
n
\family default
 y 
\family typewriter
alpha
\family default
, que son, respectivamente, el tamaño de la paleta y la fracción de transparenci
a, que es un número entre 0 y 1, que indica el grado de opacidad de los
 colores en cuestión.
 El resultado de las funciones, que es un vector de caracteres con los códigos
 hexadecimales de los colores.
\end_layout

\begin_layout Standard
Para ilustrar lo anterior, se dibujará primeramente un conjunto de líneas
 rectas con la función 
\family typewriter
abline()
\family default
, que permite, entre otras cosas dibujar líneas a partir de su intercepto
 y pendiente, y posteriormente, sobre este gráfico se dibujarán figuras
 de diversos colores tomados de alguna de las paletas anteriores, mediante
 la función 
\family typewriter
points()
\family default
, que sirve para agregar puntos en la forma de símbolos a un gráfico previo
 y cuyos argumentos son similares a los de 
\family typewriter
plot()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<paletas2, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Se establece el espacio de dibujo:
\end_layout

\begin_layout Plain Layout

plot(0, type="n", xlim=c(0,10), ylim=c(0,10))
\end_layout

\begin_layout Plain Layout

# Se dibujan las líneas rectas; para ello,
\end_layout

\begin_layout Plain Layout

# se hace uso de mapply que aplica de manera
\end_layout

\begin_layout Plain Layout

# multiple una función:
\end_layout

\begin_layout Plain Layout

void <- mapply(abline, 
\end_layout

\begin_layout Plain Layout

               c(2,1,0,-1,-2), # interceptos por línea
\end_layout

\begin_layout Plain Layout

               rep(1,5))       # pendiente = 1
\end_layout

\begin_layout Plain Layout

# dibujamos las figuras (transparentes)
\end_layout

\begin_layout Plain Layout

points(1:9, pch=22, cex=10, bg=topo.colors(9,alpha=0.5))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<paletas3, ref.label='paletas2', echo=FALSE, fig.width=4, fig.height=4, fig.show='h
old', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Uso-de-las"

\end_inset

Uso de las paletas de colores y los colores 
\emph on
transparentes
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los resultados del código anterior se muestran en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Uso-de-las"

\end_inset

.
 Un resultado similar se hubiera obtenido sustituyendo el llamado a la función
 
\family typewriter
points()
\family default
, con el siguiente código que establece la paleta de colores antes del llamado
 a 
\family typewriter
points()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<paletas4, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Establecemos la paleta de colores
\end_layout

\begin_layout Plain Layout

palette(topo.colors(9,alpha=0.5))
\end_layout

\begin_layout Plain Layout

points(1:9, pch=22, cex=10, col="black", bg=1:9)
\end_layout

\begin_layout Plain Layout

# Regresamos la paleta de colores a su
\end_layout

\begin_layout Plain Layout

# estado inicial:
\end_layout

\begin_layout Plain Layout

palette("default")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nótese que aquí, en el llamado a 
\family typewriter
points()
\family default
, se ha tenido que dar el parámetro 
\family typewriter
col=
\begin_inset Quotes erd
\end_inset

black
\begin_inset Quotes erd
\end_inset


\family default
.
 Esto es debido a que el valor por omisión para este parámetro es 1, y entonces
 el color sería tomado de la paleta actual, que no es negro como se desea
 para el contorno de los símbolos.
\end_layout

\begin_layout Section
Gráficos para una variable
\end_layout

\begin_layout Standard
Para introducir este tipo de gráficos se propone un ejemplo: la lista de
 asistentes a un cierto congreso, con el tipo de transporte por el cuál
 arribaron al mismo.
 La información correspondiente se registrará en un 
\emph on
data frame
\emph default
, que por omisión convierte las cadenas de caracteres a factores.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso, tidy=F>>=
\end_layout

\begin_layout Plain Layout

participantes <-c(
\end_layout

\begin_layout Plain Layout

    "Fulano", "Sutano", "Mengano", "Perengano", "Metano",
\end_layout

\begin_layout Plain Layout

    "Etano", "Propano", "Butano", "Pentano", "Hexano",
\end_layout

\begin_layout Plain Layout

    "Heptano", "Octano", "Ciclopentano",
\end_layout

\begin_layout Plain Layout

    "Enano", "Decano", "Hermano") 
\end_layout

\begin_layout Plain Layout

transporte <- c(
\end_layout

\begin_layout Plain Layout

    "aereo", "terrestre", "tren", "maritimo", "tren",
\end_layout

\begin_layout Plain Layout

    "tren", "terrestre", "terrestre", "aereo", "terrestre",
\end_layout

\begin_layout Plain Layout

    "maritimo", "terrestre", "aereo",
\end_layout

\begin_layout Plain Layout

    "terrestre", "terrestre", "aereo")
\end_layout

\begin_layout Plain Layout

( info <- data.frame(participantes, transporte) )
\end_layout

\begin_layout Plain Layout

# Veamos cual es la clase de info$transporte
\end_layout

\begin_layout Plain Layout

class(info$transporte)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si ahora, se quiere ver el tipo de gráfico que produce por omisión la función
 
\family typewriter
plot()
\family default
, para este tipo de dato, se hace con:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso1, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

plot(info$transporte,
\end_layout

\begin_layout Plain Layout

     las=2) # hace los textos perpendiculares al eje
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso2, ref.label='ciertocongreso1', echo=FALSE, fig.width=4, fig.height
=4, fig.show='hold', out.width='.6
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Un-diagrama-de"

\end_inset

Un diagrama de barras para los tipos de transporte
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado de este código se puede ver en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Un-diagrama-de"

\end_inset

.
 En el eje de las abscisas se han anotado las categorías, o 
\emph on
levels
\emph default
, del factor, y se ha dibujado una barra con una altura correspondiente
 al número de elementos encontrados en el factor, para esa categoría.
 Este tipo de gráfico es lo que se conoce como un 
\emph on
gráfico de barras
\emph default
.
 En el caso de los factores, al producir esta gráfica, el lenguaje nos ha
 ahorrado una serie de pasos intermedios.
 En la sección 
\begin_inset CommandInset ref
LatexCommand vref
reference "factores-table-ref"

\end_inset

, se usó la función 
\family typewriter
table()
\family default
 para calcular la frecuencia de aparición de los elementos de un factor.
 Así, para el presente caso, con esa función se hubiera obtenido:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso3, tidy=F>>=
\end_layout

\begin_layout Plain Layout

tt <- table(info$transporte)
\end_layout

\begin_layout Plain Layout

tt
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
De este modo, para producir con esta información una gráfica semejante a
 la de la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Un-diagrama-de"

\end_inset

, se podría haber ejecutado el siguiente código más explícito:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso4, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

barplot(table(info$transporte), # Nótese que se usa barplot en vez
\end_layout

\begin_layout Plain Layout

                                # de plot
\end_layout

\begin_layout Plain Layout

     las=2) # hace los textos perpendiculares al eje
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Otra forma de ver la misma información, es por medio de lo que se conoce
 como 
\emph on
gráfico de pastel
\emph default
.
 Para introducir este tipo de gráfico, se transformará la tabla 
\family typewriter
tt
\family default
 a otra tabla que muestre las frecuencias relativas de cada uno de los elementos
 del factor, así:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso5, tidy=F>>=
\end_layout

\begin_layout Plain Layout

rr <- tt/sum(tt) # Frecuencias relativas
\end_layout

\begin_layout Plain Layout

rr
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora, se producirá un gráfico de barras con las frecuencias relativas y
 se producirá un gráfico de pastel, por medio de la función 
\family typewriter
pie()
\family default
.
 Para darle una apariencia 
\emph on
más agradable
\emph default
, se emplean 4 colores de la paleta de colores 
\family typewriter
rainbow()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso6, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

barplot(rr, col=rainbow(4), las=2) # Aquí se usa 'rr'
\end_layout

\begin_layout Plain Layout

pie(tt, col=rainbow(4))            # Aquí se usa 'tt'
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al ejecutarse el código anterior, produce los gráficos que se muestran en
 la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:BarrasYpastel"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<ciertocongreso7, ref.label='ciertocongreso6', echo=FALSE, fig.width=4, fig.height
=4, fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:BarrasYpastel"

\end_inset

Un gráfico de barras y uno de pastel con la misma información
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una de las características interesantes de los gráficos de barras es que
 cuando se tienen diversas series de datos sobre un mismo asunto, se pueden
 utilizar para hacer comparaciones.
 Supóngase, para el mismo ejemplo del congreso, que los datos anteriores
 corresponden al evento para el año 2012, pero que para el año 2014, las
 proporciones de tipo de transporte fueron las siguientes:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos0, tidy=F>>=
\end_layout

\begin_layout Plain Layout

congreso2014 <- c(aereo=0.12, maritimo=0.1875, 
\end_layout

\begin_layout Plain Layout

                  terrestre=0.4925, tren=0.2)
\end_layout

\begin_layout Plain Layout

congreso2014
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Con estos nuevos datos, se puede construir una matriz que contenga todos
 los datos:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos1, tidy=F>>=
\end_layout

\begin_layout Plain Layout

rr1 <- rbind(rr, congreso2014)
\end_layout

\begin_layout Plain Layout

rownames(rr1) <- c("2012","2014") # se dan nombres a renglones
\end_layout

\begin_layout Plain Layout

rr1
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A partir de aquí, se pueden obtener gráficos de barras apareadas o agrupadas,
 para dos casos: si se toma como categoría principal el tipo de transporte
 que se usó o, si se toma como categoría principal los años de los congresos.
 En el primer caso, se usa directamente la matriz que se ha obtenido (
\family typewriter
rr1
\family default
), mientras que en el segundo caso, se usa traspuesta de la matriz 
\family typewriter
rr1
\family default
, usando cuatro colores, dado que el agrupamiento es de cuatro barras, una
 para cada tipo de transporte.
 En ambos casos, en la función 
\family typewriter
barplot()
\family default
, se especifica el argumento 
\family typewriter
beside=TRUE
\family default
, para producir grupos de barras en vez de 
\emph on
stacks
\emph default
 de barras.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos2, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# El resultado mas adecuado se obtiene 
\end_layout

\begin_layout Plain Layout

# con la matriz
\end_layout

\begin_layout Plain Layout

barplot(rr1, beside=T, col=c(1,2), las=2)
\end_layout

\begin_layout Plain Layout

legend("topleft", legend=rownames(rr1), col=c(1,2), pch=15)
\end_layout

\begin_layout Plain Layout

# Pero tambien se puede tener el caso de 
\end_layout

\begin_layout Plain Layout

# la traspuesta de la matriz original
\end_layout

\begin_layout Plain Layout

barplot(t(rr1), beside=T, col=1:4) 
\end_layout

\begin_layout Plain Layout

legend(x=4.1, y=0.48, legend=colnames(rr1), col=1:4, pch=15)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado de los dos gráficos producidos con el código anterior se puede
 apreciar en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráficos-de-barras-apareadas"

\end_inset

.
 Nótese que la leyenda se ha tenido que ubicar, en ambos casos, en el sitio
 que el gráfico lo ha permitido, y su especificación se ha hecho de dos
 maneras: por medio de un texto descriptivo y por medio de coordenadas dentro
 del espacio de dibujo.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos3, ref.label='doscongresos2', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráficos-de-barras-apareadas"

\end_inset

Gráficos de barras apareadas o agrupadas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La misma información de los gráficos anteriores se podría tener con otra
 apariencia mediante barras apiladas o en 
\emph on
stack
\emph default
.
 En este caso sólo se debe tener cuidado en el último gráfico de agregar
 espacio para colocar la leyenda.
 Por omisión, en estos casos, cada grupo de barras ocupa un espacio de 1.2
 unidades, contando el espacio entre grupos, que es de 0.2, y tomando en
 cuenta que el desplegado del primer grupo empieza justamente a partir de
 ese espacio, es decir 0.2.
 Así el código para producir los gráficos en cuestión es el que sigue, y
 su resultado se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráficos-de-barras-apiladas"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos4, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Barras apiladas: matriz normal
\end_layout

\begin_layout Plain Layout

barplot(rr1, beside=F, col=c(1,2), las=2) 
\end_layout

\begin_layout Plain Layout

legend("topleft", legend=rownames(rr1), col=c(1,2), pch=15)
\end_layout

\begin_layout Plain Layout

# El caso de la traspuesta de la matriz 
\end_layout

\begin_layout Plain Layout

# Nótese aquí el argumento xlim para dejar
\end_layout

\begin_layout Plain Layout

# espacio para la leyenda
\end_layout

\begin_layout Plain Layout

barplot(t(rr1), beside=F, col=1:4, xlim=c(0.2, 3*1.2+0.2))  
\end_layout

\begin_layout Plain Layout

legend(x=2.5, y=0.6, legend=colnames(rr1), col=1:4, pch=15)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<doscongresos5, ref.label='doscongresos4', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráficos-de-barras-apiladas"

\end_inset

Gráficos de barras apiladas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Desempleados"

\end_inset

Nótese que, a pesar de tratarse de la misma información, la comunicación
 visual hace énfasis en distintos aspectos de ella.
 Por ejemplo, en la primera gráfica de la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráficos-de-barras-apiladas"

\end_inset

, el énfasis está en los tipos de transporte que se usaron en ambos eventos
 de manera global, mientras que en la segunda, está en las proporciones
 de transporte usado con referencia al total, en cada uno de los dos años
 del evento.
 Con la mira en este impacto visual de los tipos y el aspecto de los gráficos,
 en seguida se presenta un ejemplo acerca del desempleo en México.
 Los datos se refieren a la proporción que guardan los desempleados con
 educación media superior y superior, con respecto al total de desempleados
 en el país, y son como sigue para cada trimestre, a partir del año 2011
\begin_inset Foot
status open

\begin_layout Plain Layout
Fuente: Sitio del INEGI en Internet: www.inegi.org.mx
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desempleo, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Porcentajes consecutivos por trimestre
\end_layout

\begin_layout Plain Layout

prcnt <-c(
\end_layout

\begin_layout Plain Layout

  34.6594306764, 35.2754003647, 35.40613204, 35.1855137062,
\end_layout

\begin_layout Plain Layout

  36.6282823891, 37.3816513577, 37.5314871844, 36.3784124999,
\end_layout

\begin_layout Plain Layout

  37.8949982178, 37.9752539821, 37.5238097329, 38.8349502588,
\end_layout

\begin_layout Plain Layout

  39.5894958061, 40.4058337918
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

# Años de los trimestres
\end_layout

\begin_layout Plain Layout

anio <- c(rep(2011,4), rep(2012,4), rep(2013,4), rep(2014,2))
\end_layout

\begin_layout Plain Layout

# Los trimestres
\end_layout

\begin_layout Plain Layout

trim <- c(rep(c("I","II","III","IV"),3), c("I","II"))
\end_layout

\begin_layout Plain Layout

# Se construye un data frame comprensivo con
\end_layout

\begin_layout Plain Layout

# la información anterior:
\end_layout

\begin_layout Plain Layout

desempl.educ.sup <- data.frame(anio,trim,prcnt)
\end_layout

\begin_layout Plain Layout

# Se hacen los nombres de los renglones
\end_layout

\begin_layout Plain Layout

rownames(desempl.educ.sup) <- paste0(anio,".", trim)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Se restara una cota inferior para
\end_layout

\begin_layout Plain Layout

# producir una vista con la infomación de interés
\end_layout

\begin_layout Plain Layout

tinf <- trunc(desempl.educ.sup$prcnt[1]) # entero inferior
\end_layout

\begin_layout Plain Layout

# la resta se agregará como una columna del data frame
\end_layout

\begin_layout Plain Layout

desempl.educ.sup$d1 <- desempl.educ.sup$prcnt-tinf
\end_layout

\begin_layout Plain Layout

desempl.educ.sup
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Con esta información, en seguida se hacen dos gráficos de barras horizontales
 con el código que se presenta a continuación y que se muestran en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barras-Horizontales"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desempleo0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

barplot(desempl.educ.sup$prcnt,
\end_layout

\begin_layout Plain Layout

        main="Desempleo- Educ.
 Media Sup 
\backslash
no Superior en Mexico",
\end_layout

\begin_layout Plain Layout

        xlab="% del total de desempleados", 
\end_layout

\begin_layout Plain Layout

        names.arg=rownames(desempl.educ.sup),
\end_layout

\begin_layout Plain Layout

        col=cm.colors(14), horiz=T, las=1)
\end_layout

\begin_layout Plain Layout

barplot(desempl.educ.sup$d1, 
\end_layout

\begin_layout Plain Layout

        main="Incremento en Desempleo
\backslash
nEduc.Media Sup o Superior",
\end_layout

\begin_layout Plain Layout

        xlab="% del total de desempleados",
\end_layout

\begin_layout Plain Layout

        xaxt="n", # impedimos pintar eje X; se pintara después
\end_layout

\begin_layout Plain Layout

        names.arg=rownames(desempl.educ.sup), 
\end_layout

\begin_layout Plain Layout

        col=heat.colors(14)[14:1], # Se invierte secuencia 
\end_layout

\begin_layout Plain Layout

                                   # de los colores
\end_layout

\begin_layout Plain Layout

        horiz=T, las=1)
\end_layout

\begin_layout Plain Layout

# Se cambia la escala del eje de las X
\end_layout

\begin_layout Plain Layout

# para reflejar los valores reales
\end_layout

\begin_layout Plain Layout

axis(1, at=0:6, lab=tinf:(tinf+6))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los dos gráficos presentados en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Barras-Horizontales"

\end_inset

 presentan esencialmente la misma información.
 El segundo gráfico, sin embargo, mediante el uso del color y la 
\emph on
ventana
\emph default
 de los datos que se presenta, que se calculó a partir de la diferencia
 de los datos crudos con una cota inferior, la muestra de una manera más
 dramática.
 En este último caso, hubo necesidad de ajustar la escala del eje X, por
 medio de la función 
\family typewriter
axis()
\family default
.
 En ella se indica el eje sobre el que se escribe, esto es el eje 1, en
 dónde se escribe, el parámetro 
\family typewriter
at
\family default
, y lo que se escribe, el parámetro 
\family typewriter
lab
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<desempleo1, ref.label='desempleo0', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.84
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Barras-Horizontales"

\end_inset

Ejemplos de gráficos de barras horizontales
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Gráficas de curvas continuas
\end_layout

\begin_layout Standard
Al principio de este capítulo, en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-con-atributos"

\end_inset

, se presentó el ejemplo de un histograma sobre el que se dibujó además
 una curva continua correspondiente a su ajuste a una función de densidad
 de probabilidades Gamma.
 En el caso presentado, el lenguaje 
\emph on
entiende
\emph default
 que el primero de los argumentos que se le ha pasado es una función y procede
 a producir su gráfica dentro de los límites de los ejes que se han establecido,
 que, en el caso de la figura, están dados por el anterior llamado a la
 función 
\family typewriter
hist()
\family default
, ya que la curva se agrega al histograma.
 De hecho, si el primer argumento, o argumento 
\family typewriter
x
\family default
, de la función 
\family typewriter
plot()
\family default
, es una función de esta naturaleza, su comportamiento será el mismo que
 el de la función 
\family typewriter
curve()
\family default
.
\end_layout

\begin_layout Standard
Para ejemplificar la producción de este tipo de gráficas, se programará
 una función productora de funciones de tipo sinusoidales, a partir de la
 conocida función trigonométrica seno: la función 
\family typewriter
sin()
\family default
, en R.
 Esta función producirá variaciones de la función seno, modificando solamente
 su amplitud y su fase inicial, como se muestra a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<senoides, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Función productora de funciones  
\end_layout

\begin_layout Plain Layout

# sinusoidales 
\end_layout

\begin_layout Plain Layout

fsin <- function(i,j) {
\end_layout

\begin_layout Plain Layout

    # i: afecta la fase inicial
\end_layout

\begin_layout Plain Layout

    # j: afecta la amplitud
\end_layout

\begin_layout Plain Layout

    function (x) 1/(1+j)*sin(x + i*pi/4)
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

# por ejemplo, 
\end_layout

\begin_layout Plain Layout

ff1 <- fsin(0,0) 
\end_layout

\begin_layout Plain Layout

# es lo mismo que la función sin()
\end_layout

\begin_layout Plain Layout

# veamos:
\end_layout

\begin_layout Plain Layout

sin(pi/6) # pi/6 = 30 grados
\end_layout

\begin_layout Plain Layout

ff1(pi/6)
\end_layout

\begin_layout Plain Layout

# El mismo resultado se pudo obtener directamente con
\end_layout

\begin_layout Plain Layout

fsin(0,0)(pi/6)
\end_layout

\begin_layout Plain Layout

# También,
\end_layout

\begin_layout Plain Layout

ff2 <- fsin(2,0) # igual al coseno
\end_layout

\begin_layout Plain Layout

cos(pi/6)
\end_layout

\begin_layout Plain Layout

ff2(pi/6)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora se procederá a graficar cuatro de estas funciones mediante la función
 
\family typewriter
curve()
\family default
, con el código que se muestra a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<senoides0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

n <- 4 
\end_layout

\begin_layout Plain Layout

for (i in 0:n) {
\end_layout

\begin_layout Plain Layout

    curve(fsin(i,i)(x), xlim=c(0,2*pi), 
\end_layout

\begin_layout Plain Layout

        col=rainbow(n+1)[i+1], add=(i!=0), # Note el valor de add
\end_layout

\begin_layout Plain Layout

        lwd=2) # el grosor de las líneas
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado del código anterior se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Gráfico-de-curvas"

\end_inset

.
 Debe notarse que el valor del argumento 
\family typewriter
add=(i!=0)
\family default
, es una expresión lógica.
 Esto es para indicarle al lenguaje que la primera vez que se ejecuta la
 función, es para producir la gráfica y no para añadirla a una existente,
 como ocurre en todos los otros casos.
 Otra nota importante es la manera cómo se ha especificado la función en
 el llamado a 
\family typewriter
curve()
\family default
; esto es, se ha llamado a 
\family typewriter
fsin(i,i)(x)
\family default
, y no simplemente a 
\family typewriter
fsin(i,i)
\family default
, como la intuición nos hubiera indicado.
 Esto se debe a manejos internos del intérprete para facilitar la solución
 semántica de la expresión.
 Cabe decir, sin embargo, que el código que se muestra a continuación produce
 exactamente el mismo resultado.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<senoides1, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

n <- 4
\end_layout

\begin_layout Plain Layout

for (i in 0:n) {
\end_layout

\begin_layout Plain Layout

    # producimos la función antes de pasarla a curve
\end_layout

\begin_layout Plain Layout

    ff <- fsin(i,i) 
\end_layout

\begin_layout Plain Layout

    curve(ff, xlim=c(0,2*pi), col=rainbow(n+1)[i+1], 
\end_layout

\begin_layout Plain Layout

          add=(i!=0), lwd=2)
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<senoides2, ref.label='senoides1', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.6
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Gráfico-de-curvas"

\end_inset

Gráfico de curvas continuas
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Ejemplo de gráficas escalonadas: distribución de Poisson
\end_layout

\begin_layout Standard
En contraste con las funciones continuas de la sección anterior, están las
 funciones discontinuas.
 Un ejemplo de estas funciones son las que se producen como resultado de
 alguna variable aleatoria discreta; esto es, una variable aleatoria cuyos
 valores los toma de un conjunto finito o de un conjunto numerable.
 Por ejemplo, el número que sale cada vez que se tira un dado de seis caras;
 el número de automóviles que pasan por minuto en un determinado crucero;
 el número de días seguidos que se presentó lluvia en una cierta estación
 meteorológica; el número de pacientes en una muestra, que respondieron
 positivamente a un tratamiento médico, etc.
 Para caracterizar este tipo de variables, se han desarrollado diversas
 funciones de distribución y densidad de probabilidades, que se usan de
 acuerdo con las características de cada problema en particular, tales como,
 la distribución uniforme, la distribución binomial, la distribución geométrica,
 la hipergeométrica, la multinomial, la distribución de Poisson, etc.
 
\begin_inset Foot
status open

\begin_layout Plain Layout
Todas estas funciones de distribución y densidad de probablidades se pueden
 consultar en 
\begin_inset CommandInset citation
LatexCommand cite
key "Walpole2012"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Distribuciones uniformes de variables discretas
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "pagina-uniformes"

\end_inset

En la sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Densidades-y-distribuciones"

\end_inset

, se planteó el tema de las funciones de densidad y distribución de probabilidad
es continuas.
 Aquí se abordará el tema de las funciones de densidad y distribución de
 probabilidades de variables aleatorias discretas.
 Un caso muy simple dentro de esta categoría, es el que surge de tirar un
 dado de seis caras.
 La probabilidad de que salga cualquiera de los seis números anotados en
 sus caras, es igual para todos y es exactamente 1/6 para cada número; por
 ejemplo, 
\begin_inset Formula $f(3)=Pr(y=3)=\nicefrac{1}{6}$
\end_inset

, y así para todos los otros números
\begin_inset Foot
status open

\begin_layout Plain Layout
En la fórmula del texto, la expresión 
\begin_inset Formula $Pr(y=3)$
\end_inset

, se lee como: 
\emph on
la probabilidad de que la variable aleatoria, 
\begin_inset Formula $y$
\end_inset

, adquiera un valor de 3
\emph default
.
 Expresiones similares son: 
\begin_inset Formula $Pr(y\leq3)$
\end_inset

 y 
\begin_inset Formula $Pr(3\leq y\leq5)$
\end_inset

, que corresponden respectivamente a:
\emph on
 la probabilidad de que 
\emph default

\begin_inset Formula $y$
\end_inset


\emph on
 sea menor que 3
\emph default
, y 
\emph on
la probabilidad de que 
\emph default

\begin_inset Formula $y$
\end_inset


\emph on
 esté entre 3 y 5
\emph default
.
 
\end_layout

\end_inset

.
 Asimismo, la 
\emph on
probabilidad acumulada
\emph default
 está definida por la suma de probabilidades; así, por ejemplo, 
\begin_inset Formula $F(3)=Pr(y\leq3)=f(1)+f(2)+f(3)=\nicefrac{3}{6}=\nicefrac{1}{2}$
\end_inset

.
 De igual modo que para las variables aleatorias continuas, hay dos funciones
 que las caracterizan, a saber, la función de 
\emph on
densidad
\emph default
 de probabilidades, 
\begin_inset Formula $f(y)$
\end_inset

, y la función de distribución de probabilidades, 
\begin_inset Formula $F(y)$
\end_inset

, que, como se puede apreciar del ejemplo, está definida por la fórmula
 siguiente:
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula 
\begin{equation}
F(y_{n})=\sum_{i=1}^{n}f(y_{i})\label{eq:14}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
En R, entonces, las dos funciones se pueden definir por medio del código
 que se presenta a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<funiformes, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Función de densidad de probabilidades
\end_layout

\begin_layout Plain Layout

ff <- rep(1/6, 6) 
\end_layout

\begin_layout Plain Layout

ff 
\end_layout

\begin_layout Plain Layout

# En particular,
\end_layout

\begin_layout Plain Layout

ff[3]
\end_layout

\begin_layout Plain Layout

# Función de distribución de probabilidades
\end_layout

\begin_layout Plain Layout

FF <- Reduce("+", ff, accumulate=T) 
\end_layout

\begin_layout Plain Layout

FF
\end_layout

\begin_layout Plain Layout

# En particular,
\end_layout

\begin_layout Plain Layout

FF[3]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nótese que, en este caso, en vez de utilizar la sintaxis para definición
 y uso de funciones, se utiliza directamente la sintaxis de vectores, debido
 a que se está tratando con variables discretas con valores de un conjunto
 finito.
 Además, para definir la distribución de probabilidades, se ha empleado
 la función 
\family typewriter
Reduce()
\family default
, con primer argumento 
\family typewriter

\begin_inset Quotes eld
\end_inset

+
\begin_inset Quotes erd
\end_inset


\family default
, que toma el vector 
\family typewriter
ff
\family default
 y va aplicando consecutivamente la función dada como primer argumento,
 la suma, en este caso, entre el resultado anterior de la aplicación y cada
 elemento del vector.
 Además, como se ha visto en la descripción de esta función en la sección
 
\begin_inset CommandInset ref
LatexCommand vref
reference "OP-Reduce"

\end_inset

, el argumento 
\family typewriter
accumulate=T
\family default
, obliga a entregar cada uno de los resultados intermedios en el resultado
 final; de otro modo, el resultado sería sólo la suma final y el llamado
 equivaldría al usar la función 
\family typewriter
sum(ff)
\family default
.
 Los gráficos correspondientes a estas funciones se pueden hacer con el
 código que se presenta a continuación.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<funiformes0, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Para la función de densidad de probabilidades,
\end_layout

\begin_layout Plain Layout

# se utiliza el tipo de de gráfico de agujas
\end_layout

\begin_layout Plain Layout

plot(ff, type="h", col="red", lwd=2, xlab="y", ylab="f(y)")
\end_layout

\begin_layout Plain Layout

# Por claridad se agregan puntos al gráfico:
\end_layout

\begin_layout Plain Layout

points(ff)
\end_layout

\begin_layout Plain Layout

# Para la función de distribución se utiliza el
\end_layout

\begin_layout Plain Layout

# tipo de gráfico de escalera
\end_layout

\begin_layout Plain Layout

plot(FF, type="s", col="red", lwd=2, xlab="y", ylab="F(y)") 
\end_layout

\begin_layout Plain Layout

points(FF, pch=16)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<funiformes1, ref.label='funiformes0', echo=FALSE, fig.width=4, fig.height=4,
 fig.show='hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:La-densidad-y"

\end_inset

La 
\emph on
densidad
\emph default
 y distribución de probabilidades para un dado de seis caras
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-densidad-y"

\end_inset

 se ha utilizado un tipo de gráfico de agujas para la densidad de probabilidades
, ya que permite visualizar de una mejor manera la naturaleza tipo 
\emph on
pulso
\emph default
 de la función.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Funciones-de-densidad"

\end_inset

Funciones de densidad y distribución de probabilidades de Poisson
\end_layout

\begin_layout Standard
Desde luego que no todas las variables aleatorias discretas tienen funciones
 de densidad y distribución de probabilidades tan sencillas.
 Considérese por ejemplo el siguiente problema: en un centro comercial se
 tienen tres líneas de cajas, a saber, las cajas rápidas, las cajas normales,
 y las cajas para personas con algún tipo de discapacidad.
 Se ha medido que, en promedio, a las horas pico, la afluencia de clientes
 en las cajas rápidas es de 13 clientes por minuto; en las normales, de
 10; y en las destinadas a minusválidos, de 6.
 ¿Cuál sería la probabilidad de que, a esa hora pico, para cualquiera de
 estas líneas de cajas arriben 14 o más clientes por minuto?
\end_layout

\begin_layout Standard
La respuesta a este tipo de problemas se puede modelar mediante un tipo
 de funciones de densidad y distribución de probabilidades conocida como
 distribución de Poisson.
 Aquí el parámetro importante es lo que se conoce como la 
\emph on
razón
\emph default
 media, que está dada en términos de algún número de unidades enteras dividido
 entre algún segmento de un espacio continuo, como podría ser el tiempo,
 la longitud, el área, etc.
 En el caso del ejemplo, son 13, 10, 6 o 14 clientes cada minuto.
 Otros ejemplos son, el número de defectos o fallas por unidad de longitud
 en algún riel metálico, el número de llamadas telefónicas por hora, el
 número de automóviles que arriban a un semáforo cada minuto, etc.
\end_layout

\begin_layout Standard
Si se regresa al problema mencionado del número de clientes que arriban
 por minuto a una caja, se dice, por ejemplo, que en promedio arriban 10
 clientes por minuto.
 Cuando se habla de 
\emph on
promedio
\emph default
, en general se tiende a pensar que, como realmente ocurre en el mundo real,
 en ocasiones arribarán menos y en ocasiones arribarán más clientes que
 el señalado promedio.
 Esta intuición es precisamente lo que modela la función de densidad de
 probabilidades de Poisson, que se describe por la siguiente fórmula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f(k;\lambda)=Pr(X=k)=\frac{\lambda^{k}}{k!}e^{-\lambda}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Aquí, 
\begin_inset Formula $e$
\end_inset

 es el número de Euler: la base de los logaritmos naturales, 
\begin_inset Formula $\lambda$
\end_inset

 es la razón promedio.
 De modo que, si lo que se quiere es la función correspondiente a una razón
 promedio de 10 clientes por minuto, estaría dada por:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f(k;10)=\frac{10^{k}}{k!}e^{-10}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Si en esa situación se quisiera averiguar la probabilidad de que acudieran
 12 clientes por minuto, simplemente se calcularía con:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f(12;10)=\frac{10^{12}}{12!}e^{-10}=0.0948
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Entonces, la probabilidad de que, para esa caja particular, acudan 12 clientes
 por minuto es del 9.48%.
 Afortunadamente, R cuenta con la función 
\family typewriter
dpois()
\family default
, que implementa la función de densidad de probabilidades de Poisson, y
 entonces, en R el cálculo anterior se hace con el siguiente código.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson, tidy=F>>=
\end_layout

\begin_layout Plain Layout

dpois(12,lambda=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Supóngase ahora que se quiere tener un registro de las probabilidades correspond
ientes a las razones entre 0 y 20 clientes por minuto, con la misma razón
 media de 10 clientes por minuto.
 Esto es fácil de obtener con el siguiente código.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson0, tidy=F>>=
\end_layout

\begin_layout Plain Layout

x <- 0:20 
\end_layout

\begin_layout Plain Layout

ds10 <- dpois(x, 10)
\end_layout

\begin_layout Plain Layout

ds10
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al igual que, para el caso de la distribución uniforme, presentada en la
 sección 
\begin_inset CommandInset ref
LatexCommand vref
reference "pagina-uniformes"

\end_inset

 y lo cual se ha mostrado también gráficamente en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-densidad-y"

\end_inset

, a la función de densidad de probabilidades de Poisson, le corresponde
 una función de distribución de probabilidades, que registra la probabilidad
 acumulada de acuerdo con una fórmula semejante a dada en la ecuación 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:14"

\end_inset

.
 El lenguaje implementa dicha función mediante la función 
\family typewriter
ppois()
\family default
, aunque se pudiera hacer un cálculo semejante al que se hizo anteriormente
 con 
\family typewriter
Reduce()
\family default
 en el caso de la distribución uniforme.
 En seguida se presentan y comparan ambas versiones.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson1, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Con Reduce se usa resultado anterior 'ds10'
\end_layout

\begin_layout Plain Layout

Ps10A <- Reduce('+', ds10, accumulate=T) 
\end_layout

\begin_layout Plain Layout

Ps10A
\end_layout

\begin_layout Plain Layout

# Con la función nativa del lenguaje, se usa 'x'
\end_layout

\begin_layout Plain Layout

Ps10 <- ppois(x, lambda=10)
\end_layout

\begin_layout Plain Layout

Ps10
\end_layout

\begin_layout Plain Layout

# Los resultados son "semejantes"
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Al igual que para el caso de la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:La-densidad-y"

\end_inset

, se pueden producir los gráficos correspondientes a las dos funciones por
 medio de los datos obtenidos, 
\family typewriter
ds10
\family default
 y 
\family typewriter
Ps10
\family default
, con el siguiente código.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson2, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# La función de densidad:
\end_layout

\begin_layout Plain Layout

plot(x=x, y=ds10, type="h", lwd=2, xlab="y", ylab="ds10(y)") 
\end_layout

\begin_layout Plain Layout

# Por claridad se agregan puntos al gráfico: 
\end_layout

\begin_layout Plain Layout

points(x, ds10, pch=21, bg="red")
\end_layout

\begin_layout Plain Layout

# La función de distribución:
\end_layout

\begin_layout Plain Layout

plot(x, Ps10, type="s", col="red", lwd=2, 
\end_layout

\begin_layout Plain Layout

     xlab="y", ylab="Ps10(y)")  
\end_layout

\begin_layout Plain Layout

points(x, Ps10, pch=16)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado de este código se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Las-funciones-de"

\end_inset

.
 Nótese que en todos los llamados a la funciones 
\family typewriter
plot()
\family default
 y
\family typewriter
 points()
\family default
, se ha tenido que especificar tanto las X como las Y.
 Esto se debe a que ahora el rango de las X comienza con 0 y no con 1, como
 anteriormente.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson3, ref.label='poisson2', echo=FALSE, fig.width=4, fig.height=4, fig.show='h
old', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Las-funciones-de"

\end_inset

Las funciones de densidad y distribución de probabilidades de Poisson
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El problema original, enunciado al principio de esta sección, 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "sub:Funciones-de-densidad"

\end_inset

, se mencionan tres líneas de cajas, con razones promedio de 13, 10 y 6
 clientes por minuto.
 Si se quiere ver los tres gráficos correspondientes a las funciones de
 densidad de probabilidades y los tres, correspondientes a las funciones
 de distribución de probabilidades, se pueden generar con el código que
 se presenta a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson4, tidy=F>>=
\end_layout

\begin_layout Plain Layout

x <- 0:20 # vector con los datos
\end_layout

\begin_layout Plain Layout

# Colores para cada función:
\end_layout

\begin_layout Plain Layout

cc <- c("yellow", "springgreen", "navyblue")
\end_layout

\begin_layout Plain Layout

# Las razones promedio para cada función
\end_layout

\begin_layout Plain Layout

# están dadas por:
\end_layout

\begin_layout Plain Layout

lambdas <- c(6, 10, 13)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para pintar las leyendas de ambas gráficas de manera que incluya expresiones
 simbólicas, con la letra griega lambda, semejantes a: 
\begin_inset Formula $\lambda=6$
\end_inset

, es necesario hacer la siguiente manipulación:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson4A, tidy=F>>=
\end_layout

\begin_layout Plain Layout

qq <- as.expression(
\end_layout

\begin_layout Plain Layout

         lapply(lambdas, 
\end_layout

\begin_layout Plain Layout

                function(x) bquote(lambda==.(x))))
\end_layout

\begin_layout Plain Layout

# De este modo se tiene 'qq' como una expresión de tres 
\end_layout

\begin_layout Plain Layout

# componentes: 
\end_layout

\begin_layout Plain Layout

qq
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Y entonces, para producir los gráficos correspondientes se hace con:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson4B, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# La función de densidad de probabilidades se guarda en un
\end_layout

\begin_layout Plain Layout

# data frame; una columna por cada lambda
\end_layout

\begin_layout Plain Layout

ds <- as.data.frame(lapply(lambdas, function(ll) dpois(x, ll))) 
\end_layout

\begin_layout Plain Layout

names(ds) <- lambdas 
\end_layout

\begin_layout Plain Layout

# Igual, para la función de distribución de probabilidades,
\end_layout

\begin_layout Plain Layout

Ps <- as.data.frame(lapply(lambdas, function(ll) ppois(x, ll))) 
\end_layout

\begin_layout Plain Layout

names(Ps) <- lambdas 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# En la primer iteración se usará la función plot,
\end_layout

\begin_layout Plain Layout

# y en todas las demás la función lines:
\end_layout

\begin_layout Plain Layout

funcs <- list(plot, lines)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for (i in 1:3) {
\end_layout

\begin_layout Plain Layout

    ff <- funcs[[1+(i!=1)]] # se elige la función
\end_layout

\begin_layout Plain Layout

    ff(x,ds[[i]], type="o", pch=21,bg=cc[i]) 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# En la leyenda se incluye las expresión calculada antes
\end_layout

\begin_layout Plain Layout

# y guardada en 'qq', para obtener los símbolos lambda
\end_layout

\begin_layout Plain Layout

legend("topright",
\end_layout

\begin_layout Plain Layout

       legend=qq,
\end_layout

\begin_layout Plain Layout

       lty=1, pch=21, pt.bg=cc)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for (i in 1:3) {
\end_layout

\begin_layout Plain Layout

    ff <- funcs[[1+(i!=1)]] # se elige la función
\end_layout

\begin_layout Plain Layout

    ff(x,Ps[[i]], type="s")
\end_layout

\begin_layout Plain Layout

    points(x,Ps[[i]],pch=21,bg=cc[i]) 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

# Igual, aquí se incluye la expresión 'qq'
\end_layout

\begin_layout Plain Layout

legend("bottomright",
\end_layout

\begin_layout Plain Layout

       legend=qq,
\end_layout

\begin_layout Plain Layout

       lty=1, pch=21, pt.bg=cc)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
El resultado de este código se puede ver el la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Poisson-multiples"

\end_inset

.
 Nótese que, para representar las funciones de densidad de probabilidades
 no se ha hecho con un gráfico tipo agujas, ya que al sobreponer las tres
 funciones, se hubiera prestado a confusión.
 En vez de ello, los puntos contiguos se han unido con una línea, sólo como
 una guía, ya que entre dos puntos consecutivos la función no tiene valor
 alguno.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson5, ref.label='poisson4B', echo=FALSE, fig.width=4, fig.height=4, fig.show='
hold', out.width='.8
\backslash

\backslash
linewidth'>>=
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Poisson-multiples"

\end_inset

Funciones de densidad y distribución de probabilidades de Poisson múltiples
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finalmente, queda por responder la pregunta de cuál es la probabilidad de
 que en cada una de las líneas de cajas se presenten 14 o más clientes por
 minuto.
 Para responderla, basta con usar la función 
\family typewriter
ppois()
\family default
, como se muestra a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<poisson6, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# En orden son para lambda=6, 10, 13
\end_layout

\begin_layout Plain Layout

lapply(lambdas, function(ll) 1-ppois(14, ll))
\end_layout

\begin_layout Plain Layout

# En este caso se ha restado la probabilidad resultante
\end_layout

\begin_layout Plain Layout

# de la unidad (1) porque el resultado directo es que el 
\end_layout

\begin_layout Plain Layout

# valor sea menor o igual a 14.
\end_layout

\begin_layout Plain Layout

# El mismo efecto se logra cambiando el argumento
\end_layout

\begin_layout Plain Layout

# lower.tail, como sigue
\end_layout

\begin_layout Plain Layout

lapply(lambdas, function(ll) ppois(14, ll, lower.tail=F))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Así, las probabilidades de que se presenten 14 o más clientes por minuto
 son 0.14%, 8.35% y 32.49% para las lineas de cajas de minusválidos, normales
 y rápidas, respectivamente.
\end_layout

\begin_layout Section
Dispositivos gráficos
\end_layout

\begin_layout Standard
Hasta aquí, no se ha dicho en dónde se despliegan o muestran todos los gráficos
 que se han elaborado.
 Esto es porque el lenguaje ha facilitado automáticamente un dispositivo
 de salida, a saber: una ventana en la pantalla donde se muestran los resultados
 gráficos.
 No obstante, en general se cuenta con distintos medios de salida que pueden
 ser, por ejemplo, otra ventana diferente o un archivo de algún tipo de
 datos gráfico.
\end_layout

\begin_layout Standard
Los distintos tipos de sistemas operativos donde funciona el intérprete
 del lenguaje, proveen de dispositivos por omisión, por ejemplo, en un ambiente
 de Unix o Linux, el dispositivo gráfico de pantalla se llama 
\family typewriter
x11
\family default
; en MS Windows, es 
\family typewriter
windows
\family default
, y en Mac OS X de Apple es 
\family typewriter
quartz
\family default
.
 Aparte de estos dispositivos, el sistema puede brindar información acerca
 de los que hay disponibles, en alguna instalación particular, por medio
 de la instrucción 
\family typewriter
?Devices
\family default
 o, alternativamente, 
\family typewriter
help(
\begin_inset Quotes eld
\end_inset

Devices
\begin_inset Quotes erd
\end_inset

)
\family default
.
 Aparte, hay un conjunto de funciones, casi todas con el prefijo 
\family typewriter

\begin_inset Quotes eld
\end_inset

dev.
\begin_inset Quotes erd
\end_inset


\family default
, que permiten controlar y consultar los dispositivos gráficos; un resumen
 de las cuales se muestra en la siguiente tabla:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Función
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Breve descripción
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.cur()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra el dispositivo en uso actualmente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.list()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muestra o lista los dispositivos abiertos.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.next()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entrega el dispositivo siguiente del actual.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.prev()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entrega el dispositivo anterior del actual.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.set(d)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Establece 
\family typewriter
'd'
\family default
 como el actual o, en su defecto, al siguiente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.copy()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Copia el contenido del actual al siguiente (
\emph on
default
\emph default
).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
dev.off()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cierra dispositivo actual.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
graphics.off()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cierra todos los dispositivos, salvo el de 
\emph on
default
\emph default
.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
A excepción del dispositivo por omisión (dispositivo 1), el lenguaje los
 administra mediante una lista 
\emph on
circular
\emph default
, enumerados a partir del número 2.
 Los componentes de dicha lista se pueden consultar con la función 
\family typewriter
dev.list()
\family default
.
 Solamente en uno de esos dispositivos se publican las gráficas y es el
 que se denomina dispositivo actual (
\emph on
current
\emph default
, en inglés) y su identificador numérico se puede averiguar con la función
 
\family typewriter
dev.cur()
\family default
.
 Este dispositivo se cambia cada vez que se abre uno nuevo, ya que este
 último de convierte en el actual; pero también, se puede establecer, en
 cualquier momento, alguno de los dispositivos abiertos como el actual,
 mediante la función 
\family typewriter
dev.set()
\family default
.
 Las funciones 
\family typewriter
dev.next()
\family default
 y 
\family typewriter
dev.prev()
\family default
 permiten conocer, respectivamente, el siguiente y el anterior de algún
 dispositivo dado como argumento o, en su ausencia, permiten conocer el
 siguiente y el anterior del dispositivo actual.
 La función 
\family typewriter
dev.off()
\family default
 cierra el dispositivo actual o alguno dado como argumento.
 La función 
\family typewriter
graphics.off()
\family default
 cierra todos los dispositivos abiertos.
 La función 
\family typewriter
dev.copy()
\family default
 copia el contenido del dispositivo actual al siguiente o a algún dispositivo
 que se especifica como argumento y deja como dispositivo actual a aquel
 en el que se realizó la copia.
\end_layout

\begin_layout Standard
Además del tipo de dispositivo que el sistema provee por default, esto es,
 una ventana que se abre en alguna porción de la pantalla y que, en general
 es volátil, hay dispositivos que están dirigidos a conservar la información
 gráfica en medios más permanentes, típicamente en archivos.
 Entre ellos, están los que guardan la información en un formato conocido
 como raster, esto es, como una matiz de pixels: 
\family typewriter
png()
\family default
, 
\family typewriter
jpeg()
\family default
, 
\family typewriter
bmp()
\family default
, 
\family typewriter
tiff()
\family default
.
 Por otra parte, están los dispositivos que almacenan la información en
 un formato vectorial, esto es, conservando la información de los objetos
 gráficos, como líneas, puntos, 
\emph on
fonts
\emph default
, etc.: 
\family typewriter
pdf()
\family default
, 
\family typewriter
postscript()
\family default
, 
\family typewriter
xfig()
\family default
, 
\family typewriter
svg()
\family default
.
 En general, al abrir cualquiera de estos dispositivos se debe proveer el
 nombre del archivo donde se guardará el gráfico o gráficos que se produzcan,
 o en caso de omitir tal nombre, el sistema asigna uno por 
\emph on
default
\emph default
.
\end_layout

\begin_layout Standard
En general, el proceso de crear un gráfico en un dispositivo, es semejante
 al de crear un archivo para escritura de renglones de texto.
 Este proceso se muestra en la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Proceso-para-crear"

\end_inset

.
 De manera semejante que al archivo de texto se añaden líneas mientras está
 abierto, a un dispositivo gráfico se pueden añadir 
\emph on
operaciones gráficas
\emph default
, mientras esté abierto.
 De igual manera que se pueden tener abiertos simultáneamente varios archivos
 de texto, se pueden tener abiertos varios dispositivos gráficos al mismo
 tiempo.
 Y, de modo semejante que la escritura de lineas de texto puede ser dirigida
 cualquiera de los archivos abiertos, se pueden dirigir las operaciones
 gráficas a cualquiera de los dispositivos abiertos; la diferencia en este
 caso, es que, para los archivos de texto, el archivo al que se direcciona
 la escritura se menciona en la misma operación de escritura, mientras que
 en el caso de los dispositivos gráficos, el dispositivo actual se establece
 con la función 
\family typewriter
dev.set()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ProcesoGraficos.jpg
	lyxscale 90
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Proceso-para-crear"

\end_inset

Proceso para crear un gráfico en un dispositivo
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para ilustrar el proceso de creación de gráficos en dispositivos, se desarrollar
á un ejemplo en el que se abren varios dispositivos de pantalla, con la
 función 
\family typewriter
x11()
\family default
, para el caso de Linux, y en distintos momentos se mandan o añaden operaciones
 gráficas a estos dispositivos.
 Posteriormente, el contenido gráfico de uno de los dispositivos de pantalla
 se copia a un dispositivo de archivo pdf(), para su posterior impresión
 o publicación.
\end_layout

\begin_layout Standard
El punto de partida del ejemplo, es lo que se quiere graficar: se trata
 básicamente de dos funciones de tipo sinusoidal con ruido aleatorio añadido
 en distintas proporciones, como se muestra a continuación.
 El ruido se producirá con una función generadora de números aleatorios
 con distribución uniforme: 
\family typewriter
rnorm()
\family default

\begin_inset Foot
status open

\begin_layout Plain Layout
Una distribución de probabilidades tiene cuatro funciones asociadas: la
 de densidad, cuyo nombre inicia con la letra 'd', la de distribución, cuyo
 nombre comienza con la letra 'p', la de generación de números aleatorios,
 cuyo nombre comieza con la letra 'r', y, finalmente, la función de cuantiles,
 inversa de la función de distribución, cuyo nombre comienza con la letra
 'q'.
 Así, por ejemplo, para la distribución normal, dichas funciones son: 
\family typewriter
dnorm()
\family default
, 
\family typewriter
pnorm()
\family default
, 
\family typewriter
rnorm()
\family default
 y 
\family typewriter
qnorm()
\family default
; y para la distribución de Poisson, que se visitó previamente en este capítulo,
 son: 
\family typewriter
dpois()
\family default
, 
\family typewriter
ppois()
\family default
, 
\family typewriter
rpois()
\family default
 y 
\family typewriter
qpois()
\family default
.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Los 20 puntos de muestreo:
\end_layout

\begin_layout Plain Layout

x <- seq(0,2*pi, length.out=20)
\end_layout

\begin_layout Plain Layout

# Como se usarán números aleatorios, es
\end_layout

\begin_layout Plain Layout

# conveniente establecer una "semilla" de tal
\end_layout

\begin_layout Plain Layout

# modo que el experimento se pueda repetir:
\end_layout

\begin_layout Plain Layout

set.seed(2) 
\end_layout

\begin_layout Plain Layout

# La primera función, afectada por un "ruido" de
\end_layout

\begin_layout Plain Layout

# 0.30 por el número aleatorio
\end_layout

\begin_layout Plain Layout

y <- sin(x) + 0.30*rnorm(20) 
\end_layout

\begin_layout Plain Layout

# La segunda función, afectada por un "ruido" de
\end_layout

\begin_layout Plain Layout

# 0.15 por el número aleatorio
\end_layout

\begin_layout Plain Layout

y1 <- sin(x) + 0.15*rnorm(20)
\end_layout

\begin_layout Plain Layout

# Solo para ver comparativamente los datos como
\end_layout

\begin_layout Plain Layout

# un data.frame
\end_layout

\begin_layout Plain Layout

data.frame(sin(x), y, y1)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora se procederá a graficar los datos correspondientes a una de las funciones
 en un primer dispositivo que se abrirá mediante 
\family typewriter
x11()
\family default
.
 A este primer dispositivo le corresponde el número de identificador 2.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus1, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

x11() # <-DISPOSITIVO GRÁFICO NUM 2
\end_layout

\begin_layout Plain Layout

# Se grafica la función representada por 'y'
\end_layout

\begin_layout Plain Layout

plot(x,y, type="o", pch=15, col=colors()[120]) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
En seguida, se grafican los datos correspondientes a la segunda función,
 pero esto se hará en un segundo dispositivo que también se abre mediante
 la función 
\family typewriter
x11()
\family default
.
 A este segundo dispositivo le corresponde el identificador 3.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus2, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

x11() # <-DISPOSITIVO GRÁFICO NUM 3
\end_layout

\begin_layout Plain Layout

# Se grafica la función representada por 'y1'
\end_layout

\begin_layout Plain Layout

plot(x,y1, type="o")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora, con motivos de comparación, se añadirá una función seno 
\emph on
limpia
\emph default
 a cada uno de los dos gráficos anteriores; primeramente, se añadirá una
 curva 'seno' azul al gráfico correspondiente al primer dispositivo, esto
 es, al que tiene identificador 2.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus3, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Se establece el dispositivo en el que se quiere 
\end_layout

\begin_layout Plain Layout

# añadir la curva 'seno' azul.
\end_layout

\begin_layout Plain Layout

# Se podría usar dev.set(2), pero es más conveniente
\end_layout

\begin_layout Plain Layout

# la manera que se muestra en seguida:
\end_layout

\begin_layout Plain Layout

dev.set(dev.prev()) 
\end_layout

\begin_layout Plain Layout

# Se añade la curva
\end_layout

\begin_layout Plain Layout

curve(sin, add=T, lwd=2, col="blue") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Después se procede a añadir una curva 'seno' color rojo al gráfico contenido
 en el dispositivo cuyo identificador es 3.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus4, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Se establece el dispositivo en el que se quiere 
\end_layout

\begin_layout Plain Layout

# añadir la curva 'seno' roja.
\end_layout

\begin_layout Plain Layout

dev.set(dev.next()) 
\end_layout

\begin_layout Plain Layout

# Se añade la curva
\end_layout

\begin_layout Plain Layout

curve(sin, add=T, lwd=2, col="red")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Finalmente, se quiere tener en un mismo gráfico, en otro dispositivo por
 separado, una imagen que permita comparar ambas funciones.
 Con este propósito se abrirá un nuevo dispositivo, 
\family typewriter
x11()
\family default
, y en él se graficarán, con distintos símbolos, los puntos correspondientes
 a cada una de las funciones, y éstos se unirán por medio de la función
 
\family typewriter
segments()
\family default
, que permite graficar segmentos de línea.
 Para comparar, se agregará también una curva correspondiente a la función
 seno sin ruido.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus5, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

x11() # <-DISPOSITIVO GRÁFICO NUM 4
\end_layout

\begin_layout Plain Layout

# Los puntos de la primera función 'y'
\end_layout

\begin_layout Plain Layout

plot(x,y, pch=15, col="red")
\end_layout

\begin_layout Plain Layout

# Los puntos de la segunda función 'y1'
\end_layout

\begin_layout Plain Layout

points(x,y1)
\end_layout

\begin_layout Plain Layout

# Segmentos de línea entre los puntos 
\end_layout

\begin_layout Plain Layout

# correspondientes a 'y' y los 
\end_layout

\begin_layout Plain Layout

# correspondientes a 'y1'
\end_layout

\begin_layout Plain Layout

segments(x, y, x, y1, col=colors()[99])
\end_layout

\begin_layout Plain Layout

# La curva de referencia
\end_layout

\begin_layout Plain Layout

curve(sin, add=T, lwd=3, col="navyblue") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Las tres ventanas resultantes de todo el código anterior se muestran en
 la Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tres-dispositivos-gráficos"

\end_inset

.
 Nótense ahí los identificadores que aparecen en el título de cada ventana.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename NoisySinus.png
	lyxscale 75
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Tres-dispositivos-gráficos"

\end_inset

Tres dispositivos gráficos abiertos simultáneamente
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para terminar, supóngase que se desea enviar el último gráfico, contenido
 en el dispositivo 4, a un archivo gráfico de tipo PDF.
 Esta operación se puede hacer mediante una copia con la función 
\family typewriter
dev.copy()
\family default
, como se muestra a continuación.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus6, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

# Primeramente se abre el dispositivo, que, 
\end_layout

\begin_layout Plain Layout

# ahora viene a ser el actual
\end_layout

\begin_layout Plain Layout

pdf("miArch.pdf")  
\end_layout

\begin_layout Plain Layout

# ..
 entonces nos regresamos al anterior que es
\end_layout

\begin_layout Plain Layout

# el que contiene el material gráfico que nos
\end_layout

\begin_layout Plain Layout

# interesa copiar
\end_layout

\begin_layout Plain Layout

dev.set(dev.prev()) 
\end_layout

\begin_layout Plain Layout

# Se hace la copia.
 Nótese que, en este caso, 
\end_layout

\begin_layout Plain Layout

# dev.copy() copia por default al dispositivo
\end_layout

\begin_layout Plain Layout

# siguiente del actual.
\end_layout

\begin_layout Plain Layout

dev.copy() 
\end_layout

\begin_layout Plain Layout

# ahora el pdf es el actual; pero 
\end_layout

\begin_layout Plain Layout

# se tiene que cerrar 
\end_layout

\begin_layout Plain Layout

# para que la copia tenga efecto: 
\end_layout

\begin_layout Plain Layout

dev.off() # cierra el dispositivo
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Desde luego que las copias de material gráfico hechas con 
\family typewriter
dev.copy()
\family default
, no son de la calidad óptima.
 Si el asunto fuera la producción de un gráfico PDF con calidad óptima,
 lo apropiado sería, repetir las funciones de producción de los gráficos
 directamente en el dispositivo abierto, como se muestra a continuación:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<noisySinus7, eval=F, tidy=F>>=
\end_layout

\begin_layout Plain Layout

pdf("miArch.pdf")  
\end_layout

\begin_layout Plain Layout

plot(x,y, pch=15, col="red")
\end_layout

\begin_layout Plain Layout

points(x,y1)
\end_layout

\begin_layout Plain Layout

segments(x, y, x, y1, col=colors()[99])
\end_layout

\begin_layout Plain Layout

curve(sin, add=T, lwd=3, col="navyblue") 
\end_layout

\begin_layout Plain Layout

dev.off() # cierra el dispositivo
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\end_body
\end_document
